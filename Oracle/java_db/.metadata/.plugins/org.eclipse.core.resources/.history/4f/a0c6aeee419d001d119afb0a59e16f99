package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;

import dto.MemberDTO;
import util.DBConnect;

public class MemberDAO {
	public boolean insert(MemberDTO dto) {
		Connection conn = null;
		PreparedStatement pstmt = null;
		int flag = 0;
		try { // conn 과 pstmt 는 오픈 되어있으니 닫아야 한다. 역순으로 닫아라. //stack을 이용하기 때문
			conn = DBConnect.getConnection();
			String sql = "INSERT INTO MEMBER(mem_id, mem_name, mem_regno1, mem_regno2, mem_hp, mem_mail)"
					+ "VALUES (?,?,?,?,?,?)";
			pstmt = conn.prepareStatement(sql); // 외부로부터 넘겨오는 값을 넣는 거기 때문에 ? 쓴다. preparestatement : 가져와, statement : 직접
												// 값을 지정할 때, 문자열을 집어 넣을 때

			pstmt.setString(1, dto.getMem_id()); // 정수면 setint, setdouble ...setstring -> string 객체로 리턴
			pstmt.setString(2, dto.getMem_name());
			pstmt.setString(3, dto.getMem_regno1());
			pstmt.setString(4, dto.getMem_regno2());
			pstmt.setString(5, dto.getMem_hp());
			pstmt.setString(6, dto.getMem_mail());

			flag = pstmt.executeUpdate(); // insert 할 떄는 executeupdate, select 할 때는 executequery 1: 정상입력 0 : 입력 x

		} catch (Exception e) {
			e.printStackTrace();
		} finally { // 항상실행
			try {
				if (pstmt != null) {
					pstmt.close();
				}
				if (conn != null) {
					conn.close();
				}

			} catch (Exception e) {
			}
		}
		if (flag > 0) {
			return true;
		} else {
			return false;
		}
	}
}
